allprojects {
    ext {
        lombokVersion = "1.18.24"
        springBootVersion = "2.6.7"
        springVersion = "5.3.19"
        mapstructVersion = "1.4.2.Final"
        junitVersion = "5.8.1"
    }

    apply plugin: 'java'

    group 'me.bogeun'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform()
    }
}

subprojects {
    project(":domain")

    project(":presentation") {
        project(":presentation:api") {
            dependencies {
                implementation project(":domain")

                implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

                implementation 'io.springfox:springfox-boot-starter:3.0.0'
                implementation 'io.springfox:springfox-swagger-ui:3.0.0'
            }
        }
    }

    project(":infrastructure") {
        project(":infrastructure:jpa") {
            dependencies {
                implementation project(":domain")

                implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"

                // 이걸 왜 추가해야 하는지 모르겠음 jpa의 entityManager와 연관있고, jdk11 이후 버전을 쓰면 문제가 생기는듯
                implementation 'javax.xml.bind:jaxb-api:2.3.1'

                implementation 'com.h2database:h2:1.4.199'

                // 이거 mapstruct가 setter를 써야해서 lombok이 먼저 추가가 되어야 한다는데
                // 그래들 동작 방식을 알아야 좀 더 이해가 될듯
                compileOnly "org.mapstruct:mapstruct:$mapstructVersion"
                annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

                testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
                testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
            }
        }
    }

    project(":boot") {
        dependencies {
            implementation project(":domain")
            implementation project(":presentation:api")
            implementation project(":infrastructure:jpa")

            implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
        }
    }
}